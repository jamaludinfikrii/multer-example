{"version":3,"sources":["pages/PostNewProduct.jsx","components/Navbar.jsx","pages/ListProducts.jsx","pages/ProductDetail.jsx","App.js","serviceWorker.js","index.js"],"names":["PostNewProduct","onBtnSubmitClick","name","refs","value","price","Number","images","files","data","console","log","JSON","stringify","fd","FormData","i","length","append","Axios","post","then","res","alert","message","catch","err","className","type","ref","placeholder","accept","multiple","onClick","this","React","Component","Navbar","state","current","handleClick","e","setState","key","selectedKeys","mode","Item","HomeFilled","to","AppstoreOutlined","Title","Typography","Products","getAllProducts","get","sudahAda","newData","forEach","val","product_id","push","renderDataToJsx","map","style","height","alt","width","objectFit","objectPosition","src","image_url","level","icon","ArrowRightOutlined","ProductDetail","dataSelected","selectedImage","getDataProduct","id","window","location","pathname","split","renderListImage","listImages","filter","image_id","cursor","onBtnSaveEditClick","image","editImage","id_image","path","patch","error","onChangeInputImage","click","onChange","display","App","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.05a21285.chunk.js","sourcesContent":["import React from 'react'\nimport Axios from 'axios'\n\n\n\n\nclass PostNewProduct extends React.Component{\n  onBtnSubmitClick = () => {\n    let name = this.refs.name.value\n    let price = Number(this.refs.price.value)\n    let images = this.refs.images.files\n    let data = {\n      name : name,\n      price : price\n    }\n\n    console.log(images)\n\n    // convert object to string\n    data = JSON.stringify(data)\n    console.log(data)\n\n    // check if there is null value\n    if(name && price && images){\n      let fd = new FormData()\n      for(let i = 0 ; i< images.length ; i ++){\n        // fd.append 'fieldname' , 'value / file / text' \n        fd.append('product-images' , images[i])\n      }\n      fd.append('productData' , data )\n      console.log(fd)\n\n      Axios.post('https://file-upload-system-fikri.herokuapp.com/product', fd )\n      .then((res) => {\n        console.log(res.data)\n        alert(res.data.message)\n        this.refs.name.value = ''\n        this.refs.price.value = null\n        this.refs.images.value = null\n        \n      })\n      .catch((err) => {\n        console.log(err)\n      })\n    }else{\n      alert('error')\n    }\n  }\n\n\n\n\n  render(){\n    return(\n      <div className='container pt-5'>\n        <div className='row justify-content-center'> \n          <div className='col-md-4 card'>\n            <span className=\"card-title text-center\">Post Product</span>\n            <div className='card-body'>\n              <input type='text' ref='name' placeholder='Product Name' className='form-control' />\n              <input type='number' ref='price' placeholder='Product Price' className='form-control  mt-3' />\n              <input ref='images' type='file' className='form-control mt-3' accept='image/*' multiple=\"multiple\"/>\n              <input type='button' className='btn btn-outline-primary mt-3' value='submit' onClick={this.onBtnSubmitClick} />\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\n\nexport default PostNewProduct","import React from 'react'\nimport { Menu } from 'antd';\nimport {\n  AppstoreOutlined,\n  HomeFilled\n} from '@ant-design/icons';\nimport {Link} from 'react-router-dom'\n\n\nclass Navbar extends React.Component {\n  state = {\n    current: 'post',\n  };\n\n  handleClick = e => {\n    console.log('click ', e);\n    this.setState({\n      current: e.key,\n    });\n  };\n\n  render() {\n    return (\n      <Menu onClick={this.handleClick} selectedKeys={[this.state.current]} mode=\"horizontal\">\n        <Menu.Item>\n          <HomeFilled key='home' />\n          Upload File System\n        </Menu.Item>\n            <Menu.Item key=\"post\" >\n                <Link to='/post-product'>\n                <AppstoreOutlined />\n                Post Product\n                </Link>\n            </Menu.Item>\n        <Menu.Item key=\"list\">\n            <Link to='/products'>\n            Product List\n            </Link>\n        </Menu.Item>\n      </Menu>\n    );\n  }\n}\nexport default Navbar","import React from 'react'\nimport { Card ,Typography,Button} from 'antd'\nimport { ArrowRightOutlined } from '@ant-design/icons';\nimport Axios from 'axios';\nimport {Link} from 'react-router-dom'\n\nconst {Title} = Typography\n\nclass Products extends React.Component{\n    state = {data : null}\n    componentDidMount(){\n        this.getAllProducts()\n    }\n\n    getAllProducts = () => {\n        Axios.get('https://file-upload-system-fikri.herokuapp.com/product')\n        .then((res) => {\n            console.log(res.data)\n            let newData = []\n            let sudahAda;\n            res.data.data.forEach((val) => {\n                sudahAda = false\n                for(var i = 0 ; i < newData.length ; i++){\n                    if(val.product_id === newData[i].product_id){\n                        sudahAda = true\n                        break;\n                    }\n                }\n\n                if(!sudahAda) newData.push(val)\n                \n            })\n            console.log(res.data.data)\n            console.log(newData)\n            this.setState({data : newData})\n        })\n        .catch((err) => {\n            console.log(err)\n        })\n    }\n\n    renderDataToJsx = () => {\n        return this.state.data.map((val) =>{\n            return(\n                <div className='col-md-4'>\n                    <Card>\n                        <div style={{height : \"120px\"}} className='row'> \n                            <div className='col-6 h-100'>\n                                <img alt='broken' width='100%' style={{objectFit :\"cover\",objectPosition :\"top\",height:'100%'}} src={'https://file-upload-system-fikri.herokuapp.com/' + val.image_url} />\n                            </div>\n                            <div className='col-6'>\n                                <Title level={4}>\n                                    {val.name}\n                                </Title>\n                                <div>\n                                    Rp. {val.price}\n                                </div>\n                                <div className='mt-3'>\n                                    <Link to={'/product-detail/' + val.product_id}>\n                                        <Button type=\"primary\" icon={<ArrowRightOutlined/>}>\n                                                See Detail\n                                        </Button>\n                                    </Link>\n                                </div>\n\n                            </div>\n                        </div>\n                    </Card>\n                </div>\n            )\n        })\n    }\n\n    render(){\n        if(this.state.data === null) return <h1>Loading ...</h1>\n        if(this.state.data.length === 0) return <h1>Data Product Masih Kosong</h1>\n        return(\n            <div className='container mt-5'>\n                <div className='row'>\n                    {this.renderDataToJsx()}\n                </div>\n\n            </div>\n        )\n    }\n}\n\nexport default Products\n\n","import React, { Component } from 'react'\nimport {Card, Button} from 'antd'\nimport Axios from 'axios'\n\nclass ProductDetail extends Component {\n    state = {data : null , dataSelected : null , selectedImage: null}\n\n    componentDidMount(){\n        this.getDataProduct()\n    }\n    getDataProduct = () => {\n        const id = window.location.pathname.split('/')[2]\n        Axios.get('https://file-upload-system-fikri.herokuapp.com/product/' + id)\n        .then((res) => {\n            console.log(res.data)\n            this.setState({data : res.data.data, dataSelected : res.data.data[0]})\n        })\n\n        .catch((err) => {\n            console.log(err)\n        })\n    }\n\n    renderListImage = () => {\n        let listImages = this.state.data\n        listImages= listImages.filter((val) => {\n            return val.image_id !== this.state.dataSelected.image_id\n        })\n        return listImages.map((data) => {\n            return(\n             <div className='col-md-2' style={{height : \"120px\"}}>\n                 <Card className='h-100'>\n                     <img  onClick={() => this.setState({dataSelected : data})} src={\"https://file-upload-system-fikri.herokuapp.com/\" + data.image_url} style={{height :\"80px\",objectFit : \"contain\",cursor:'pointer'}} width='100%' alt=\"broken\"/>\n                 </Card>\n             </div>\n            )\n        })\n    }\n\n    onBtnSaveEditClick = () => {\n        console.log(this.state.dataSelected)\n        const image = this.refs.editImage.files[0]\n        const id_image = this.state.dataSelected.image_id\n        const path = this.state.dataSelected.image_url\n\n        console.log('masuk')\n\n        const fd = new FormData()\n        fd.append('editImage',image)\n        fd.append('path',path)\n        Axios.patch('https://file-upload-system-fikri.herokuapp.com/product/image/' + id_image, fd)\n        .then((res) => {\n            if(res.data.error === false){\n                alert(res.data.message)\n                this.setState({selectedImage : null})\n                this.getDataProduct()\n            }\n        })\n        .catch((err) => {\n\n        })\n        \n    \n    }\n    onChangeInputImage = () => {\n        // alert('masuk')\n        let image = this.refs.editImage.files[0]\n        this.setState({selectedImage : image.name})\n    }\n    render() {\n        if(this.state.data === null || this.state.dataSelected === null) return <h1>Loading ...</h1>\n        if(this.state.data.length === 0) return <h1>Data Kosong</h1>\n        return (\n            <div className='container'>\n                <h4 className='text-center'>{this.state.data[0].name}</h4>\n                <h5 className='text-center'>Rp. {this.state.data[0].price}</h5>\n                <div className='row justify-content-center'>\n                    <div className='col-md-6' style={{height : '50vh'}}>\n                        <Card className='h-100'>\n                            <img src={\"https://file-upload-system-fikri.herokuapp.com/\" + this.state.dataSelected.image_url }style={{height :\"45vh\",objectFit : \"contain\"}} width='100%' alt=\"broken\"/>\n                        </Card>\n                        <div className='text-center mt-3'>\n                            <Button className='text-center' onClick={()=> this.refs.editImage.click()} type='primary'>\n                                { this.state.selectedImage === null ? 'Edit Image' : this.state.selectedImage}\n                            </Button>\n                            <input onChange={this.onChangeInputImage} accept='image/*' style={{display : \"none\"}} ref='editImage' type=\"file\"/>\n                            {\n                                this.state.selectedImage === null ?\n                                <Button className='text-center' type='danger'>Delete Image</Button>\n                                :\n                                <span>\n                                    <Button className='text-center' onClick={this.onBtnSaveEditClick} type='ghost'>Save</Button>\n                                    <Button className='text-center' onClick={() => this.setState({selectedImage : null}) } type='danger'>Cancel</Button>\n                                </span>\n                            }\n                        </div>\n                    </div>\n                </div>\n                <div className='row mt-5'>\n                   {\n                       this.renderListImage()\n                   }\n                </div>\n            </div>\n        )\n    }\n}\n\n\nexport default  ProductDetail;","import React from 'react';\nimport './App.css';\nimport PostNewProduct from './pages/PostNewProduct';\nimport Navbar from './components/Navbar'\nimport {BrowserRouter , Route} from 'react-router-dom'\nimport Products from './pages/ListProducts'\nimport ProductDetail from './pages/ProductDetail';\nclass App extends React.Component{\n\n  render(){\n    return(\n      <div>\n      <BrowserRouter>\n\n        <Navbar />\n          {/* <Route path='/'>\n            <Home /> \n          </Route> */}\n          <Route path='/products'>\n            <Products /> \n          </Route>\n          <Route path='/product-detail'>\n            <ProductDetail /> \n          </Route>\n          <Route path='/post-product'>\n            <PostNewProduct /> \n          </Route>\n \n        </BrowserRouter>\n      </div>\n\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'antd/dist/antd.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}